<?php
// module/Album/view/album/album/edit.phtml:
$title = $this->translate('Modifier le contenu');
$this->headTitle($title);
?>
    <h1><?php echo $this->escapeHtml($title); ?></h1>
    <style>
        div label {
            width: 150px;

        }

        div input[type="submit"], #submitbutton {
            width: 80px;
            height: 40px;
        }

        #contentText {
            width: 700px;
            height: 350px;
        }

        .contentTextareaContainer {
            width: 700px;
            height: 350px;
            display: block;
        }

        .dataTables_filter {
            margin-right: 10%;
        }

        form ul {
            display: none;

        }

        .imgView {
            cursor: pointer;
        }

        img.imgpreview {
            display: block;
            margin: auto;
        }

        div#tableSort_length label {
            display: inline;
        }

    </style>
    <script type="text/javascript" src="<?php echo $this->basePath() . '/js/tinymce/tinymce.min.js'; ?>"></script>
    <script type="text/javascript">

        var counter = 0;

        tinymce.init({
            verify_html: false,
            cleanup: false,
            clean_up_on_startup: false,
            forced_rooted_block: "",
            selector: "#contenuId",
            language: '<?php echo $this->plugin('translate')->getTranslator()->getLocale(); ?>',
            plugins: [
                "advlist autolink lists link image charmap print preview anchor",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table contextmenu paste",
                "importcss"
            ],
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright",
            content_css: ["<?php echo $this->basePath() . '/assets/css/blocks.css';?>",
                "<?php echo $this->basePath() . '/assets/css/app.css';?>",
                "<?php echo $this->basePath() . '/assets/css/custom.css';?>",
                "<?php echo $this->basePath() . '/assets/plugins/bootstrap/css/bootstrap.min.css';?>",
                "<?php echo $this->basePath() . '/assets/plugins/cube-portfolio/cubeportfolio/css/cubeportfolio.min.css';?>"]
        });

        function soumettreajout() {

            if (validajout()) {
                document.contenuform.submit();
            }
        }

        $("#addGPSInfo").on("click", function () {

            var fieldsetTag = '<fieldset style="margin-top:20px;"><legend><?php echo $this->translate('Géolocalisation');?>&nbsp;&nbsp;&nbsp;<a class="btn removeGpsInfo"><?php echo $this->translate('Supprimer'); ?></a></legend><label><span><?php echo $this->translate('Latitude');?></span><input type="text" name="gps[gpsCoordinates]'+'['+counter+1+']'+'[gpspointLat]" maxlength="10" value="" pattern="^(\-)?\\d+(\\.\\d{1,7})?$"></label><label><span><?php echo $this->translate('Longitude');?></span><input type="text" name="gps[gpsCoordinates]'+'['+counter+1+']'+'[gpspointLong]" maxlength="11" pattern="^(\-)?\\d+(\\.\\d{1,8})?$" value=""></label><label><span><?php echo $this->translate('Détails concernant les coordonnées');?></span><textarea name="gps[gpsCoordinates]'+'['+counter+1+']'+'[gpspInfo]" class="gpsInfoTextarea"></textarea></label></fieldset>';
            $(".gpsInfoContainer").append(fieldsetTag);
            counter++;
            gpsFieldsetClickEvent();
        });

        function validajout() {
            var rub = document.contenuform.rubriquesList.value;
            var sousrub = document.contenuform.sousrubriquesList.value;
            var position = document.contenuform.position.value;

            var isPosition = isNaN($.trim(position));

            var formDataList = $('form').serializeArray();
            // console.log('formDataList', formDataList);
            var isCoordOk = true;
            for(var i = 0; i<formDataList.length; i++){
                if(formDataList[i]['name'].indexOf('gpspointLong') > 0){
                    isCoordOk = checkLongitude(formDataList[i]['value']);
                }
                if (!isCoordOk) {
                    bootbox.alert("<?php echo $this->translate("une longitude GPS n'est pas correcte"); ?>");
                    break;
                }
                if(formDataList[i]['name'].indexOf('gpspointLat') > 0){
                    isCoordOk = checkLatitude(formDataList[i]['value']);
                }
                if (!isCoordOk) {
                    bootbox.alert("<?php echo $this->translate("une latitude GPS n'est pas correcte"); ?>");
                    break;
                }
            }

            if(!isCoordOk) {
                return false;
            }

            if ($.trim(rub) == "") {
                document.contenuform.rubriquesList.focus();
                bootbox.alert('<?php echo $this->translate('Vous devez choisir une rubrique'); ?>');
                return false;
            }

            if ($.trim(sousrub) == "") {
                document.contenuform.sousrubriquesList.focus();
                bootbox.alert('<?php echo $this->translate('Vous devez choisir une sous-rubrique'); ?>');
                return false;
            }

            //console.log(isNaN($.trim(position)));
            if (isPosition || position == undefined || position === null || position === '') {
                //    console.log(isNan($.trim(position)));
                bootbox.alert('<?php echo $this->translate('La position doit être vide ou être un nombre'); ?>');
                return false;
            }

            return true;
        }


        function getSousrub(id) {

            var param = {};
            param['rubid'] = id;

            $.ajax({
                type: 'POST',
                url: '<?php echo $this->url('Contenu', array('action' => 'sousRubriqueAjax')); ?>',
                data: param,
                //contentType: "application/json",
                success: function (data) {
                    $('#sousrubriqueSelectIdTag').html(function () {
                        var content = "";
                        var sousrub = <?php echo $sousrubrique_id; ?>;

                        content += "<option value=''><?php echo $this->translate('Sélectionner une sous-rubrique'); ?></option>";

                        for (var i = 0; i < data['sousrubriquesList'].length; i++) {

                            if (data['sousrubriquesList'][i]['id'] == sousrub) {
                                content += "<option value='" + data['sousrubriquesList'][i]['id'] + "' selected=\"selected\">" + data['sousrubriquesList'][i]['libelle'] + "</option>";
                            }
                            else {
                                content += "<option value='" + data['sousrubriquesList'][i]['id'] + "'>" + data['sousrubriquesList'][i]['libelle'] + "</option>";
                            }

                        }

                        return content;

                    });
                },
                error: function (error) {
                    console.log(error);
                }

            });
        }

        function initDropDownListRub() {

            var idrub = <?php echo $rubrique_id ?>;

            $('#rubriqueSelectIdTag option').each(function () {

                if ($(this).val() == idrub) {

                    $(this).attr('selected', 'selected');

                }
            });

            getSousrub(idrub);

        }

        function setGpsFields() {
            var gpsCoordList = <?php echo $this->gpsInfoList; ?>;
            //console.log(gpsCoordList[0]['latitude']);
            $("[name = 'gps[gpsCoordinates][0][gpspointLat]'").val(gpsCoordList[0]['latitude']);
            $("[name = 'gps[gpsCoordinates][0][gpspointLong]'").val(gpsCoordList[0]['longitude']);
            $("[name = 'gps[gpsCoordinates][0][gpspInfo]'").val(gpsCoordList[0]['description']);
            //gps[gpsCoordinates][0][gpspointLat]
            var gpsInfoLength = gpsCoordList.length -1;

            for (var i=0; i<gpsInfoLength; i++) {
                counter++;
                var fieldsetTag = '<fieldset style="margin-top:20px;"><legend><?php echo $this->translate('Géolocalisation');?>&nbsp;&nbsp;&nbsp;<a class="btn removeGpsInfo"><?php echo $this->translate('Supprimer'); ?></a></legend><label><span><?php echo $this->translate('Latitude');?></span><input type="text" name="gps[gpsCoordinates]' + '[' + counter + ']' + '[gpspointLat]" maxlength="10" pattern="^(\-)?\\d+(\\.\\d{1,7})?$" value="'+gpsCoordList[counter]['latitude']+'"></label><label><span><?php echo $this->translate('Longitude');?></span><input type="text" name="gps[gpsCoordinates]' + '[' + counter + ']' + '[gpspointLong]" maxlength="11" pattern="^(\-)?\\d+(\\.\\d{1,8})?$" value="'+gpsCoordList[counter]['longitude']+'"></label><label><span><?php echo $this->translate('Détails concernant les coordonnées');?></span><textarea name="gps[gpsCoordinates]' + '[' + counter + ']' + '[gpspInfo]" class="gpsInfoTextarea">'+gpsCoordList[counter]['description']+'</textarea></label></fieldset>';
                $(".gpsInfoContainer").append(fieldsetTag);
            }

            gpsFieldsetClickEvent();
        }

        function gpsFieldsetClickEvent() {
            $("a.removeGpsInfo").off();
            $("a.removeGpsInfo").on("click", function () {
                $(this).parent().parent().remove();
                counter--;
            });
        }

        function checkLongitude(lon){
            //console.log('LONGITUDE', lon);
            var longRegex = /^(-)?\d+(\.\d{1,8})?$/;
            var isLongOk = longRegex.test(lon);
            var longitude = parseFloat(lon);
            //console.log('PARSE FLOAT LON',longitude);
            if(!isNaN(longitude) && isLongOk && (longitude <= 180 && longitude >= -180)) {
                return true
            }
            return false;
        }

        function checkLatitude(lat){
            //console.log('LATITUDE', lat);
            var latRegex = /^(-)?\d+(\.\d{1,7})?$/;
            var isLatOk = latRegex.test(lat);
            var latitude = parseFloat(lat);
            //console.log('PARSE FLOAT LAT',latitude);
            if(!isNaN(latitude) && isLatOk && (latitude <= 90 && latitude >= -90)) {
                return true
            }
            return false;
        }

        $(document).ready(function () {

            $("#tableSort").dataTable({
                language: {
                    processing: "<?php echo $this->translate('Traitement en cours...'); ?>",
                    search: "<?php echo $this->translate('Rechercher'); ?>&nbsp; ",
                    lengthMenu: "<?php echo $this->translate('Afficher') . '_MENU_ ' . $this->translate('&eacute;l&eacute;ments'); ?>",
                    info: "<?php echo $this->translate('Affichage de l\'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments') ?>",
                    infoEmpty: "<?php echo $this->translate('Affichage de l\'&eacute;lement') . ' 0 &agrave; 0 ' . $this->translate('sur') . ' 0 ' . $this->translate('&eacute;l&eacute;ments') ?>",
                    infoFiltered: "(<?php echo $this->translate('filtr&eacute; de ') . '_MAX_ ' . $this->translate('&eacute;l&eacute;ments au total'); ?>)",
                    infoPostFix: "",
                    loadingRecords: "<?php echo $this->translate('Chargement en cours'); ?>...",
                    zeroRecords: "<?php echo $this->translate('Aucun &eacute;l&eacute;ment &agrave; afficher'); ?>",
                    emptyTable: "<?php echo $this->translate('Aucune donnée disponible dans le tableau'); ?>",
                    paginate: {
                        first: "<?php echo $this->translate('Premier'); ?>",
                        previous: "<?php echo $this->translate('Pr&eacute;c&eacute;dent') ?>",
                        next: "<?php echo $this->translate('Suivant') ?>",
                        last: "<?php echo $this->translate('Dernier') ?>"
                    },
                    aria: {
                        sortAscending: ": <?php echo $this->translate('activer pour trier la colonne par ordre croissant'); ?>",
                        sortDescending: ": <?php echo $this->translate('activer pour trier la colonne par ordre décroissant'); ?>"
                    },
                    "aoColumnDefs": [
                        {'bSortable': false, 'aTargets': [0]}
                    ]
                }
            });

            setGpsFields();

            $("#addGPSInfo").on("click", function () {
                counter++;
                var fieldsetTag = '<fieldset style="margin-top:20px;"><legend><?php echo $this->translate('Géolocalisation');?>&nbsp;&nbsp;&nbsp;<a class="btn removeGpsInfo"><?php echo $this->translate('Supprimer'); ?></a></legend><label><span><?php echo $this->translate('Latitude');?></span><input type="text" name="gps[gpsCoordinates]'+'['+counter+']'+'[gpspointLat]" maxlength="10" value=""></label><label><span><?php echo $this->translate('Longitude');?></span><input type="text" name="gps[gpsCoordinates]'+'['+counter+']'+'[gpspointLong]" maxlength="10" value=""></label><label><span><?php echo $this->translate('Détails concernant les coordonnées');?></span><textarea name="gps[gpsCoordinates]'+'['+counter+']'+'[gpspInfo]" class="gpsInfoTextarea"></textarea></label></fieldset>';
                $(".gpsInfoContainer").append(fieldsetTag);
                gpsFieldsetClickEvent();
            });

            $('#rubriqueSelectIdTag').change(function () {

                var rub = $('#rubriqueSelectIdTag').val();
                //console.log(rub);
                getSousrub(rub, false);
            });

            $('#submitbutton').on("click", function () {
                soumettreajout();
            });

            initDropDownListRub();

            $('#tableSort').on('draw.dt', function () {
                $("img.imgView").off("click");
                $("img.imgView").on("click", function () {
                    var linkToImg = $(this).attr("data-img");
                    var extension = $(this).attr("data-filetype");
                    if (extension == 'jpg' || extension == 'jpeg'
                        || extension == 'png' || extension == 'bmp'
                        || extension == 'gif' || extension == 'svg') {
                        bootbox.alert("<img class='imgpreview' src='" + linkToImg + "' >");
                    }
                });
            });

            $("img.imgView").on("click", function () {
                var linkToImg = $(this).attr("data-img");
                var extension = $(this).attr("data-filetype");
                if (extension == 'jpg' || extension == 'jpeg'
                    || extension == 'png' || extension == 'bmp'
                    || extension == 'gif' || extension == 'svg') {
                    bootbox.alert("<img class='imgpreview' src='" + linkToImg + "' >");
                }
            });

            $('#htmltemplateSelectIdTag').change(function () {
                var idTemplate = $('#htmltemplateSelectIdTag').val();
                displayDialogBox(idTemplate);
            });

            function getHtmlTemplate(id) {
                var param = {};
                param['id'] = id;
                //console.log(id);
                $.ajax({
                    type: 'POST',
                    url: '<?php echo $this->url('htmltemplate', array('action' => 'gethtmltemplate')); ?>',
                    data: param,
                    success: function (data) {
                        if(data !== undefined && data !== null
                            && data['template'] !== undefined && data['template'] !== null
                            && data['template']['template'] !== undefined && data['template']['template'] !== null) {
                            tinymce.activeEditor.setContent(data.template.template);
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }

            function displayDialogBox(id) {
                bootbox.dialog("<?php echo $this->translate("&Ecirc;tes vous sûr de coller ce modèle html ?"); ?>", [{
                    "label": "<?php echo $this->translate('Oui') ?>",
                    "class": "btn-success",
                    "callback": function () {
                        getHtmlTemplate(id);
                    }
                },
                    {
                        "label": "<?php echo $this->translate('Non') ?>",
                        "class": "btn-danger",
                        "callback": function () {
                            //alert('toto');
                        }
                    }]);
            }

        });
    </script>

<?php
$form = $this->form;
$form->setAttribute('action', $this->url('mapcontent', array('action' => 'edit', 'id' => $this->id,)
));

$form->prepare();

if (is_array($error)) {
    foreach ($error as $value) {
        //var_dump($error);

        foreach ($value as $message) {
            //print_r($error);
            echo '<div style="color:red;">' . $message . '</div>';
        }
    }
}

echo $this->form()->openTag($form);
echo $this->formHidden($form->get('id'));
//echo $this->formHidden($form->get('rubriques_id'));
//echo $this->formHidden($form->get('sousrubriques_id'));
echo '<div>' . $this->formRow($form->get('titre')) . '</div>';
echo '<div>' . $this->formRow($form->get('soustitre')) . '</div>';
echo '<div>' . $this->formRow($form->get('position')) . '</div>';
echo '<div><div>' . $this->translate('Rubrique') . '</div>' . $this->formSelect($form->get('rubriquesList')) . '</div>';
echo '<div><div>' . $this->translate('Sous-Rubrique') . '</div>' . $this->formSelect($form->get('sousrubriquesList')) . '</div>';
echo '<div>&nbsp;</div>';
echo '<div>' . $this->formSelect($form->get('htmltemplateList')) . '</div>';
echo '<div>&nbsp;</div>';
echo '<div class="contentTextareaContainer">' . $this->formTextarea($form->get('contenu')) . '</div>';
echo '<div class="gpsInfoContainer">' . $this->formCollection($form->get('gps')) . '</div>';
echo '<div>&nbsp;</div>';
echo '<div><a class="btn" id="addGPSInfo">' . $this->translate('Ajouter un point gps') . '</a></div>';
echo '<hr>';
echo '<div>&nbsp;</div>';
echo '<div>' . $this->formButton($form->get('submitbutton')) . '</div>';
//echo '<div>' . $this->formSubmit($form->get('submitbutton')) . '</div>';
echo $this->form()->closeTag();


echo '<div>&nbsp;</div>';
echo '<div id="filesContainer">';
echo '<table class="tablesorter table table-bordered table-striped hasFilters" id="tableSort" role="grid"><thead>';
echo '<tr><th class="thheader" style="cursor:default;text-align:center;">' . $this->translate('Vignette') . '</th>';
echo '<th class="thheader" style="cursor:pointer;text-align:center;">' . $this->translate('Chemin image') . '</th>';
echo '<th style="text-align:center; cursor:pointer;" class="thheader">' . $this->translate('Description') . '</th>';
echo '<th style="width:20%; text-align:center; line-height:20px; cursor:pointer;" class="thheader" align="center">' . $this->translate('Meta Donn&eacute;es') . '</th>';
echo '<th style="cursor:pointer;text-align:center;">' . $this->translate('type de fichier') . '</th>';
echo '<th style="cursor:pointer;text-align:center;">' . $this->translate('Copier le lien') . '</th></tr>';
echo '</thead><tbody>';


foreach ($fichiers as $fichier) :
    ?>
    <tr>
        <td style="width:10%; text-align:center; line-height:40px;"><img class="imgView"
                                                                         data-filetype="<?php echo $fichier->getType(); ?>"
                                                                         data-img="<?php
                                                                         echo $this->basePath() . '/' . $fichier->getChemin() . $fichier->getNom() ?>"
                                                                         src="<?php
                                                                         echo $this->basePath() . '/' . $fichier->getThumbnailpath() . '/' . $fichier->getThumbnail();


                                                                         ?>" width=40 height=40/></td>

        <td style="width:20%; text-align:center; line-height:40px;"><?php echo $this->escapeHtml($fichier->getChemin() . $fichier->getNom()); ?></td>
        <td style="width:20%; text-align:center; line-height:40px;"><?php echo $this->escapeHtml($fichier->getLibelle()); ?></td>
        <td style="width:20%; text-align:center; line-height:40px;"><?php echo $this->escapeHtml($fichier->getMetaData()); ?></td>
        <td style="width:20%; text-align:center; line-height:40px;"> <?php echo $fichier->getType() ?> </td>
        <td style="width:10%; text-align:center; line-height:40px;">
            <button class="filepathBtn"
                    data-clipboard="<?php echo $this->basePath() . '/' . $fichier->getChemin() . $fichier->getNom() ?>"><?php echo $this->translate("Copier le lien"); ?></button>
        </td>

    </tr>
<?php endforeach;

echo '</tbody></table></div>';
//echo "Zend engine version: " . zend_version();
//print_r($fichiers);

?>